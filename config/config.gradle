ext { //文件名字随便起，但是【ext】名称是固定的。目的是对所依赖的系统版本、第三方库版本等进行统一管理

    android = [compileSdkVersion: 26,
               buildToolsVersion: "27.0.3",
               minSdkVersion    : 14,
               targetSdkVersion : 22,
               versionName      : getGitBranch() + "_" + getGitTag() + "_" + getGitSHA(), //根据git信息生成版本名
               versionCode      : getGitCommitCount(),  //根据git提交次数生成版本号
    ]

    gitinfo = [
            gitBranch = getGitBranch(),
            gitTag = getGitTag(),
            gitSHA = getGitSHA(),
            gitCommitCount = getGitCommitCount(),
    ]

    thirdLib = [
            gsonVersion    : "2.6.2", // gson
            eventbusVersion: "3.0.0", // 事件分发
    ]

    dependencies = [
            //android lib
            "appcompat-v7": "com.android.support:appcompat-v7:${android["androidSupportSdkVersion"]}",
            "annotations" : "com.android.support:support-annotations:${android["androidSupportSdkVersion"]}",
            "cardview-v7" : "com.android.support:cardview-v7:${android["androidSupportSdkVersion"]}",
    ]
}

/**
 * 获取Git 分支名
 */
static def getGitBranch() {
    return 'git symbolic-ref --short -q HEAD'.execute().text.trim()
}

/**
 * 获取Git Tag
 */
def getGitTag() {
    return 'git describe --tags'.execute([], project.rootDir).text.trim()
}

/**
 * 获取Git 版本号
 */
static def getGitSHA() {
    return 'git rev-parse --short HEAD'.execute().text.trim()
}
/**
 * 获取Git 提交次数
 */
static def getGitCommitCount() {
    return 'git rev-list --count HEAD'.execute().text.trim().toInteger()
}