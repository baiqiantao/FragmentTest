//作用：对所依赖的系统版本、第三方库版本等进行统一的管理。
// 注意：每一个此类型的文件必须包含一个根节点ext，且ext下必须包含一个属性android，除此之外可以随意定义其他属性或方法
ext {
    android = [compileSdkVersion: 26,
               buildToolsVersion: "27.0.3",
               minSdkVersion    : 14,
               targetSdkVersion : 22,
               versionName      : getGitBranch() + "_" + getGitTag() + "_" + getGitSHA(), //根据git信息生成版本名
               versionCode      : getGitCommitCount(),  //根据git提交次数生成版本号
    ]
}

//获取Git 分支名，参考 https://blog.csdn.net/ouyang_peng/article/details/77802596
static def getGitBranch() {
    return 'git symbolic-ref --short -q HEAD'.execute().text.trim() //例如 master
}

//获取Git Tag
def getGitTag() {
    return 'git describe --tags'.execute([], project.rootDir).text.trim() //例如 bqt20094
    //注意，如果没有设置 tag 的话结果为：fatal: No names found, cannot describe anything.
}

//获取Git 版本号
static def getGitSHA() {
    return 'git rev-parse --short HEAD'.execute().text.trim()  //例如 3d5851e
}

//获取Git 提交次数
static def getGitCommitCount() {
    return 'git rev-list --count HEAD'.execute().text.trim().toInteger() //例如 8
}